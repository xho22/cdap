<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Copyright Â© 2014-2016 Cask Data, Inc.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
  -->
<configuration>

  <!-- General Configuration -->

  <property>
    <name>hdfs.lib.dir</name>
    <value>${hdfs.namespace}/lib</value>
    <description>
      Common directory in HDFS for, among others, JAR files for coprocessors
    </description>
  </property>

  <property>
    <name>hdfs.namespace</name>
    <value>/${root.namespace}</value>
    <description>
      Root directory for HDFS files written by CDAP
    </description>
  </property>

  <property>
    <name>hdfs.user</name>
    <value>yarn</value>
    <description>
      User name for accessing HDFS
    </description>
  </property>

  <property>
    <name>instance.name</name>
    <value>${root.namespace}</value>
    <description>
      Determines a unique identifier for a CDAP instance. It is used for
      providing authorization to a particular CDAP instance. Must be
      alphanumeric, and should not be changed after CDAP has been started.
      If it is changed, there is a risk of losing data (for example,
      authorization policies).
    </description>
  </property>

  <property>
    <name>local.data.dir</name>
    <value>data</value>
    <description>
      Data directory for Standalone CDAP and the master process in
      Distributed CDAP
    </description>
  </property>

  <property>
    <name>mapreduce.include.custom.format.classes</name>
    <value>true</value>
    <description>
      Indicates whether to include custom input/output format classes in the
      job.jar or not; if set to true, custom format classes will be added to
      the job.jar and available as part of the MapReduce system classpath
    </description>
  </property>

  <property>
    <name>mapreduce.jobclient.connect.max.retries</name>
    <value>2</value>
    <description>
      Indicates the maximum number of retries the JobClient will make to
      establish a service connection when retrieving job status and history
    </description>
  </property>

  <property>
    <name>master.startup.checks.classes</name>
    <value></value>
    <description>
      Comma-separated list of classnames for checks that will be run before
      the CDAP Master starts up. If any of the checks fails, the CDAP Master
      will not start up. Checks will only be run if
      ${master.startup.checks.enabled} is set to true.
    </description>
  </property>

  <property>
    <name>master.startup.checks.enabled</name>
    <value>true</value>
    <description>
      Whether checks should be run before startup to determine if the CDAP
      Master can be run correctly. Which checks are run is determined by the
      ${master.startup.checks.packages} and ${master.startup.checks.classes}
      settings. If any checks fail, the CDAP Master will fail to start
      instead of waiting for the problem to be fixed. This setting only
      affects Distributed CDAP. It does not apply to Standalone CDAP.
    </description>
  </property>

  <property>
    <name>master.startup.checks.packages</name>
    <value>co.cask.cdap.master.startup,co.cask.cdap.data.startup</value>
    <description>
      Comma-separated list of packages containing checks that will be run
      before the CDAP Master starts up. If any of the checks fails, the CDAP
      Master will not start up. Checks will only be run if
      master.startup.checks.enabled is set to true.
    </description>
  </property>

  <property>
    <name>namespaces.dir</name>
    <value>namespaces</value>
    <description>
      The sub-directory of ${hdfs.namespace} in which namespaces are stored
    </description>
  </property>

  <property>
    <name>root.namespace</name>
    <value>cdap</value>
    <description>
      Root for this CDAP instance; used as the parent (or root) node for
      ZooKeeper, as the directory under which all CDAP data and metadata is
      stored in HDFS, and as the prefix for all HBase tables created by
      CDAP; must be composed of alphanumeric characters
    </description>
  </property>

  <property>
    <name>thrift.max.read.buffer</name>
    <value>16777216</value>
    <description>
      Specifies the maximum read buffer size in bytes used by the Thrift
      service; value should be set to greater than the maximum frame sent on
      the RPC channel
    </description>
  </property>

  <property>
    <name>twill.java.reserved.memory.mb</name>
    <value>250</value>
    <description>
      Reserved non-heap memory in megabytes for Apache Twill container
    </description>
  </property>

  <property>
    <name>twill.jvm.gc.opts</name>
    <value>-verbose:gc -Xloggc:&lt;LOG_DIR&gt;/gc.log -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M</value>
    <description>
      Java garbage collection options for all Apache Twill containers;
      "&lt;LOG_DIR&gt;" is the location of the log directory in the
      container; note that the special characters are replaced with entity
      equivalents so they can be included in the XML
    </description>
  </property>

  <property>
    <name>twill.no.container.timeout</name>
    <value>120000</value>
    <description>
      Duration in milliseconds to wait for at least one container for Apache Twill runnable
    </description>
  </property>

  <property>
    <name>twill.zookeeper.namespace</name>
    <value>/twill</value>
    <description>
      ZooKeeper namespace prefix for Apache Twill
    </description>
  </property>

  <property>
    <name>zookeeper.client.startup.timeout.millis</name>
    <value>60000</value>
    <description>
      Duration in milliseconds to wait for a successful connection to a server in the
      ZooKeeper quorum
    </description>
  </property>

  <property>
    <name>zookeeper.quorum</name>
    <value>127.0.0.1:2181/${root.namespace}</value>
    <description>
      ZooKeeper quorum string; specifies the ZooKeeper host:port; substitute
      the quorum (FQDN1:2181,FQDN2:2181,...) for the components shown here
    </description>
  </property>

  <property>
    <name>zookeeper.session.timeout.millis</name>
    <value>40000</value>
    <description>
      ZooKeeper session timeout in milliseconds
    </description>
  </property>


  <!-- Global Configuration -->

  <property>
    <name>dataset.unchecked.upgrade</name>
    <value>false</value>
    <description>
      By default, any changes made to existing datasets are not deployed
      when an app is redeployed; setting this value to true allows the
      dataset changes to be deployed upon app redeployment
    </description>
  </property>

  <property>
    <name>enable.unrecoverable.reset</name>
    <value>false</value>
    <description>
      Determines if resetting CDAP should be enabled. **WARNING: Enabling
      this option makes it possible to delete all applications and data; NO
      RECOVERY IS POSSIBLE!**
    </description>
  </property>


  <!-- Applications Configuration -->

  <property>
    <name>app.artifact.dir</name>
    <value>/opt/cdap/master/artifacts</value>
    <description>
      Semicolon-separated list of local directories scanned for system
      artifacts to add to the artifact repository
    </description>
  </property>

  <property>
    <name>master.services.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Bind address for app fabric service and dataset service
    </description>
  </property>

  <property>
    <name>app.bind.port</name>
    <value>0</value>
    <description>
      App Fabric service bind port
    </description>
  </property>

  <property>
    <name>app.ssl.bind.port</name>
    <value>30443</value>
    <description>
      App Fabric service bind port
    </description>
  </property>

  <property>
    <name>app.output.dir</name>
    <value>/programs</value>
    <description>
      Directory where all archives are stored
    </description>
  </property>

  <property>
    <name>app.program.extra.classpath</name>
    <value></value>
    <description>
      Extra Java classpath for CDAP programs
    </description>
  </property>

  <property>
    <name>app.program.jvm.opts</name>
    <value>-XX:MaxPermSize=128M ${twill.jvm.gc.opts}</value>
    <description>
      Java options for all program containers
    </description>
  </property>

  <property>
    <name>app.program.runid.corrector.interval</name>
    <value>180</value>
    <description>
      Interval in seconds of how often the run id corrector thread will run; this value
      should be greater than 0
    </description>
  </property>

  <property>
    <name>app.program.runtime.extensions.dir</name>
    <value>/opt/cdap/master/ext/runtimes</value>
    <description>
      Semicolon-separated list of local directories that are scanned for
      program runtime extensions
    </description>
  </property>

  <property>
    <name>app.program.spark.yarn.client.rewrite.enabled</name>
    <value>true</value>
    <description>
      Specify whether to rewrite the yarn.client class in Spark to work
      around the issue SPARK-13441 in CDH clusters
    </description>
  </property>

  <property>
    <name>app.temp.dir</name>
    <value>/tmp</value>
    <description>
      Temp directory
    </description>
  </property>

  <property>
    <name>apps.scheduler.queue</name>
    <value></value>
    <description>Scheduler queue for CDAP programs and CDAP Explore queries</description>
  </property>

  <property>
    <name>app.program.max.start.seconds</name>
    <value>300</value>
    <description>
      Maximum number of seconds to wait for a program to start before killing it
    </description>
  </property>

  <property>
    <name>app.program.max.stop.seconds</name>
    <value>300</value>
    <description>
      Maximum number of seconds to wait for a program to stop before killing it
    </description>
  </property>

  <property>
    <name>scheduler.max.thread.pool.size</name>
    <value>100</value>
    <description>
      Size of the scheduler thread pool
    </description>
  </property>

  <property>
    <name>workflow.token.max.size.mb</name>
    <value>30</value>
    <description>
      Maximum allowed size in megabytes of a workflow token; if the
      workflow token exceeds this size, no further updates are allowed
    </description>
  </property>


  <!-- Audit Configuration -->

  <property>
    <name>audit.enabled</name>
    <value>true</value>
    <description>
      Determines whether to publish audit messages to Apache Kafka
    </description>
  </property>

  <property>
    <name>audit.kafka.topic</name>
    <value>audit</value>
    <description>
      Apache Kafka topic name to which audit messages are published
    </description>
  </property>


  <!-- Datasets Configuration -->

  <property>
    <name>data.local.storage</name>
    <value>${local.data.dir}/ldb</value>
    <description>
      Database directory for LevelDB, used for data fabric in Standalone
      CDAP
    </description>
  </property>

  <property>
    <name>data.local.storage.blocksize</name>
    <value>1024</value>
    <description>
      Block size in bytes for data fabric when in Standalone CDAP
    </description>
  </property>

  <property>
    <name>data.local.storage.cachesize</name>
    <value>104857600</value>
    <description>
      Cache size in bytes for data fabric when in Standalone CDAP
    </description>
  </property>

  <property>
    <name>data.tx.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Transaction service bind address
    </description>
  </property>

  <property>
    <name>data.tx.bind.port</name>
    <value>0</value>
    <description>
      Transaction service bind port; binds to a random port by default
    </description>
  </property>

  <property>
    <name>data.tx.client.count</name>
    <value>50</value>
    <description>
      The number of pooled instances of the transaction client; increase
      this to increase transaction concurrency
    </description>
  </property>

  <property>
    <name>data.tx.client.provider</name>
    <value>pool</value>
    <description>
      Provider strategy for transaction clients; valid values are "pool" and
      "thread-local"
    </description>
  </property>

  <property>
    <name>data.tx.discovery.service.name</name>
    <value>transaction</value>
    <description>
      Name in discovery service for the transaction service
    </description>
  </property>

  <property>
    <name>data.tx.hdfs.user</name>
    <value>${hdfs.user}</value>
    <description>
      User name for accessing HDFS (if not running in secure HDFS)
    </description>
  </property>

  <property>
    <name>data.tx.janitor.enable</name>
    <value>true</value>
    <description>
      Determines if the TransactionDataJanitor coprocessor is enabled on
      tables; normally should be true
    </description>
  </property>

  <property>
    <name>data.tx.max.instances</name>
    <value>${master.service.max.instances}</value>
    <description>
      Maximum number of transaction service instances
    </description>
  </property>

  <property>
    <name>data.tx.memory.mb</name>
    <value>${master.service.memory.mb}</value>
    <description>
      Memory in megabytes for each transaction service instance
    </description>
  </property>

  <property>
    <name>data.tx.num.cores</name>
    <value>${master.service.num.cores}</value>
    <description>
      Number of virtual cores for the transaction service
    </description>
  </property>

  <property>
    <name>data.tx.num.instances</name>
    <value>1</value>
    <description>
      Requested number of transaction service instances
    </description>
  </property>

  <property>
    <name>data.tx.server.io.threads</name>
    <value>2</value>
    <description>
      Number of IO threads for the transaction service
    </description>
  </property>

  <property>
    <name>data.tx.server.threads</name>
    <value>25</value>
    <description>
      Number of threads for the transaction service
    </description>
  </property>

  <property>
    <name>data.tx.snapshot.codecs</name>
    <value>
      co.cask.cdap.data2.transaction.snapshot.SnapshotCodecV1,
      co.cask.cdap.data2.transaction.snapshot.SnapshotCodecV2,
      org.apache.tephra.snapshot.SnapshotCodecV3,
      org.apache.tephra.snapshot.SnapshotCodecV4
    </value>
    <description>
      Specifies the class names of all supported transaction state codecs
    </description>
  </property>

  <property>
    <name>data.tx.snapshot.dir</name>
    <value>${hdfs.namespace}/tx.snapshot</value>
    <description>
      Directory in HDFS used to store snapshots and logs of transaction
      state
    </description>
  </property>

  <property>
    <name>data.tx.snapshot.interval</name>
    <value>60</value>
    <description>
      Frequency of transaction snapshots in seconds
    </description>
  </property>

  <property>
    <name>data.tx.snapshot.local.dir</name>
    <value>${local.data.dir}/tx.snapshot</value>
    <description>
      Storage directory on the local filesystem of snapshot and logs of
      transaction state when in Standalone CDAP
    </description>
  </property>

  <property>
    <name>data.tx.snapshot.retain</name>
    <value>10</value>
    <description>
      Number of transaction snapshot files to retain as backups
    </description>
  </property>

  <property>
    <name>data.tx.thrift.max.read.buffer</name>
    <value>${thrift.max.read.buffer}</value>
    <description>
      Maximum read buffer size (in bytes) used by the transaction service;
      the value should be set to something greater than the maximum frame
      sent on the RPC channel
    </description>
  </property>

  <property>
    <name>data.tx.timeout</name>
    <value>30</value>
    <description>
      Timeout value in seconds for a transaction; if the transaction is not
      finished in that time, it is marked invalid
    </description>
  </property>

  <property>
    <name>data.tx.max.timeout</name>
    <value>600</value>
    <description>
      The limit for the allowed transaction timeout, in seconds. Attempts to
      start a transaction with a longer timeout will fail.
    </description>
  </property>

  <property>
    <name>dataset.data.dir</name>
    <value>data</value>
    <description>
      Base directory for user data on the filesystem
    </description>
  </property>

  <property>
    <name>dataset.executor.container.instances</name>
    <value>1</value>
    <description>
      Number of dataset executor instances
    </description>
  </property>

  <property>
    <name>dataset.executor.container.memory.mb</name>
    <value>${master.service.memory.mb}</value>
    <description>
      Memory in megabytes for each dataset executor instance
    </description>
  </property>

  <property>
    <name>dataset.executor.container.num.cores</name>
    <value>1</value>
    <description>
      Number of virtual cores for each dataset executor instance
    </description>
  </property>

  <property>
    <name>dataset.executor.max.instances</name>
    <value>${master.service.max.instances}</value>
    <description>
      Maximum number of dataset executor instances
    </description>
  </property>

  <property>
    <name>dataset.executor.bind.port</name>
    <value>0</value>
    <description>
      Dataset executor bind port
    </description>
  </property>

  <property>
    <name>dataset.extensions.dir</name>
    <value>/opt/cdap/ext/lib</value>
    <description>
      Directory where all dataset extensions are stored
    </description>
  </property>

  <property>
    <name>dataset.service.bind.port</name>
    <value>0</value>
    <description>
      Dataset service bind port
    </description>
  </property>

  <property>
    <name>dataset.service.output.dir</name>
    <value>/datasets</value>
    <description>
      Directory where all dataset modules archives are stored
    </description>
  </property>

  <property>
    <name>dataset.table.prefix</name>
    <value>${root.namespace}</value>
    <description>
      Prefix for dataset table name
    </description>
  </property>


  <!-- Explore Service Configuration -->

  <property>
    <name>explore.active.operation.timeout.secs</name>
    <value>86400</value>
    <description>
      Timeout value in seconds for an SQL operation whose result was not
      fetched completely
    </description>
  </property>

  <property>
    <name>explore.cleanup.job.schedule.secs</name>
    <value>60</value>
    <description>
      Interval in seconds to schedule the clean-up of timed-out operations
    </description>
  </property>

  <property>
    <name>explore.container.yarn.app.classpath.first</name>
    <value>false</value>
    <description>
      Determines if the YARN application classpath precedes the query engine classpath
    </description>
  </property>

  <property>
    <name>explore.enabled</name>
    <value>true</value>
    <description>
      Determines if the CDAP Explore Service (ad-hoc SQL queries) is enabled
    </description>
  </property>

  <property>
    <name>explore.executor.container.memory.mb</name>
    <value>1024</value>
    <description>
      Memory in megabytes for each CDAP Explore executor instance.
      This is explicitly set differently than ${master.service.memory.mb} as
      Explore requires more memory to run than the Master service.
    </description>
  </property>

  <property>
    <name>explore.executor.container.num.cores</name>
    <value>1</value>
    <description>
      Number of virtual cores for each explore executor instance
    </description>
  </property>

  <property>
    <name>explore.inactive.operation.timeout.secs</name>
    <value>3600</value>
    <description>
      Timeout value in seconds for an SQL operation which does not have any
      more results to be fetched
    </description>
  </property>

  <property>
    <name>explore.local.data.dir</name>
    <value>${local.data.dir}/explore</value>
    <description>
      Data directory for CDAP Explore Service when in Standalone CDAP
    </description>
  </property>

  <property>
    <name>explore.start.on.demand</name>
    <value>false</value>
    <description>
      Determines the start-up of the CDAP Explore Service (ad-hoc SQL
      queries); if false, the explore service starts up when CDAP is
      started; if true, the CDAP Explore Service will start upon the first
      query it receives
    </description>
  </property>

  <property>
    <name>explore.writes.enabled</name>
    <value>true</value>
    <description>
      Determines if writing to a table through the CDAP Explore Service (ad-
      hoc SQL queries) is enabled
    </description>
  </property>

  <property>
    <name>explore.service.bind.port</name>
    <value>0</value>
    <description>
      Explore service bind port
    </description>
  </property>


  <!-- Gateway Configuration -->

  <property>
    <name>app.boss.threads</name>
    <value>1</value>
    <description>
      Number of Netty service boss threads
    </description>
  </property>

  <property>
    <name>app.connection.backlog</name>
    <value>20000</value>
    <description>
      Max connection backlog of CDAP Master
    </description>
  </property>

  <property>
    <name>app.exec.threads</name>
    <value>20</value>
    <description>
      Number of Netty service executor threads
    </description>
  </property>

  <property>
    <name>app.worker.threads</name>
    <value>10</value>
    <description>
      Number of Netty service worker threads
    </description>
  </property>


  <!-- Kafka Server Configuration -->

  <property>
    <name>kafka.seed.brokers</name>
    <value>127.0.0.1:9092</value>
    <description>
      Comma-separated list of CDAP Kafka service brokers; for distributed
      CDAP, replace with list of FQDN:port brokers
    </description>
  </property>

  <property>
    <name>kafka.server.default.replication.factor</name>
    <value>1</value>
    <description>
      CDAP Kafka service replication factor; used to replicate Kafka
      messages across multiple machines to prevent data loss in the event of
      a hardware failure. The recommended setting is to run at least two
      CDAP Kafka servers. If you are running two CDAP Kafka servers, set
      this value to 2; otherwise, set it to the maximum number of tolerated
      machine failures plus one (assuming you have that number of machines).
    </description>
  </property>

  <property>
    <name>kafka.server.host.name</name>
    <value>0.0.0.0</value>
    <description>
      CDAP Kafka service bind address
    </description>
  </property>

  <property>
    <name>kafka.server.log.dirs</name>
    <value>/tmp/kafka-logs</value>
    <description>
      Comma-separated list of CDAP Kafka service log storage directories
    </description>
  </property>

  <property>
    <name>kafka.server.log.flush.interval.messages</name>
    <value>10000</value>
    <description>
      The interval length (in number of messages) at which to force an fsync of data
      written to the log
    </description>
  </property>

  <property>
    <name>kafka.server.log.retention.hours</name>
    <value>24</value>
    <description>
      The number of hours to keep a log file before deleting it
    </description>
  </property>

  <property>
    <name>kafka.server.num.partitions</name>
    <value>10</value>
    <description>
      Default number of partitions for a topic
    </description>
  </property>

  <property>
    <name>kafka.server.port</name>
    <value>9092</value>
    <description>
      CDAP Kafka service bind port
    </description>
  </property>

  <property>
    <name>kafka.server.zookeeper.connection.timeout.ms</name>
    <value>1000000</value>
    <description>
      Maximum time in milliseconds that the client will wait to
      establish a connection to ZooKeeper
    </description>
  </property>

  <property>
    <name>kafka.zookeeper.namespace</name>
    <value>kafka</value>
    <description>
      CDAP Kafka service ZooKeeper namespace
    </description>
  </property>

  <property>
    <name>kafka.zookeeper.quorum</name>
    <value></value>
    <description>
      CDAP Kafka service ZooKeeper quorum and namespace. If set, this will override
      the ZooKeeper quorum (set by ${zookeeper.quorum}) and the ZooKeeper namespace
      (set by ${kafka.zookeeper.namespace}) when setting up a connection to
      the Kafka service used by CDAP. If the same Kafka service ZooKeeper quorum
      and namespace are shared by multiple CDAP instances, each CDAP instance
      needs to distinguish its Kafka topics from those of other CDAP instances
      with unique values for ${audit.kafka.topic}, ${log.kafka.topic},
      ${notification.kafka.topic}, ${metadata.updates.kafka.topic}, and
      ${metrics.kafka.topic.prefix}.
    </description>
  </property>


  <!-- Logging Configuration -->

  <property>
    <name>log.base.dir</name>
    <value>/logs/avro</value>
    <description>
      Base log directory
    </description>
  </property>

  <property>
    <name>log.cleanup.run.interval.mins</name>
    <value>1440</value>
    <description>
      Log cleanup interval in minutes
    </description>
  </property>

  <property>
    <name>log.collection.root</name>
    <value>${local.data.dir}/logs</value>
    <description>
      Root location for collecting logs when in Standalone CDAP
    </description>
  </property>

  <property>
    <name>log.kafka.topic</name>
    <value>logs.user-v2</value>
    <description>
      Kafka topic name used to publish logs
    </description>
  </property>

  <property>
    <name>log.publish.num.partitions</name>
    <value>10</value>
    <description>
      Number of CDAP Kafka service partitions to publish the logs to
    </description>
  </property>

  <property>
    <name>log.retention.duration.days</name>
    <value>7</value>
    <description>
      Duration in days of log file HDFS retention
    </description>
  </property>

  <property>
    <name>log.saver.max.instances</name>
    <value>${master.service.max.instances}</value>
    <description>
      Maximum number of log saver instances to run in YARN
    </description>
  </property>

  <property>
    <name>log.saver.num.instances</name>
    <value>1</value>
    <description>
      Number of log saver instances to run in YARN
    </description>
  </property>

  <property>
    <name>log.saver.container.memory.mb</name>
    <value>1024</value>
    <description>
      Memory in megabytes for each log saver instance to run in YARN.
      This is explicitly set differently than ${master.service.memory.mb} as
      Log saver requires more memory to run than the Master service.
    </description>
  </property>

  <property>
    <name>log.saver.container.num.cores</name>
    <value>2</value>
    <description>
      Number of virtual cores for each log saver instance in YARN
    </description>
  </property>

  <property>
    <name>log.saver.status.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Log Saver HTTP service bind address
    </description>
  </property>


  <!-- Master Configuration -->

  <property>
    <name>http.service.boss.threads</name>
    <value>1</value>
    <description>
      Number of Netty service boss threads for master HTTP services
    </description>
  </property>

  <property>
    <name>http.service.connection.backlog</name>
    <value>20000</value>
    <description>
      Max connection backlog of master HTTP service
    </description>
  </property>

  <property>
    <name>http.service.exec.threads</name>
    <value>20</value>
    <description>
      Number of Netty service executor threads for master HTTP services
    </description>
  </property>

  <property>
    <name>http.service.worker.threads</name>
    <value>10</value>
    <description>
      Number of Netty service worker threads for master HTTP services
    </description>
  </property>

  <property>
    <name>master.collect.app.containers.log.level</name>
    <value>ERROR</value>
    <description>
      The log level of application container logs that are streamed back to
      the CDAP Master process log. The levels supported are [ ALL, TRACE,
      DEBUG, INFO, WARN, ERROR, OFF ].
    </description>
  </property>

  <property>
    <name>master.collect.containers.log</name>
    <value>true</value>
    <description>
      Determines if master service container logs are streamed back to the
      CDAP Master process log
    </description>
  </property>

  <property>
    <name>master.service.max.instances</name>
    <value>5</value>
    <description>
      Maximum number of master service instances
    </description>
  </property>

  <property>
    <name>master.service.memory.mb</name>
    <value>512</value>
    <description>
      Memory in megabytes for each master service instance
    </description>
  </property>

  <property>
    <name>master.service.num.cores</name>
    <value>2</value>
    <description>
      Number of virtual cores for each master service instance
    </description>
  </property>

  <property>
    <name>master.startup.service.timeout.seconds</name>
    <value>600</value>
    <description>
      Timeout in seconds for master services to wait for their dependent
      services to be available. For example, the dataset executor master
      service requires the transaction service, and will wait for the
      transaction service to become available while it is starting up. If
      the timeout is hit, the service will fail to start and the master
      service will shut itself down. If set to 0 or below, master services
      will not wait for their dependent services to start before starting
      themselves.
    </description>
  </property>

  <property>
    <name>master.services.scheduler.queue</name>
    <value></value>
    <description>Scheduler queue for CDAP master services</description>
  </property>


  <!-- Messaging System Configuration -->

  <property>
    <name>messaging.container.instances</name>
    <value>1</value>
    <description>
      Number of instances for the messaging service
    </description>
    <final>true</final>
  </property>

  <property>
    <name>messaging.max.instances</name>
    <value>1</value>
    <description>
      Maximum number of instances for the messaging service
    </description>
    <final>true</final>
  </property>

  <property>
    <name>messaging.container.memory.mb</name>
    <value>${master.service.memory.mb}</value>
    <description>
      Memory in megabytes for each messaging service instance
    </description>
  </property>

  <property>
    <name>messaging.container.num.cores</name>
    <value>${master.service.num.cores}</value>
    <description>
      Number of virtual cores for each messaging service instance
    </description>
  </property>

  <property>
    <name>messaging.local.data.ttl.cleanup.frequency.secs</name>
    <value>3600</value>
    <description>
      Scheduling frequency of TTL cleanup thread in seconds (only used in Standalone CDAP)
    </description>
  </property>

  <property>
    <name>messaging.hbase.max.scan.threads</name>
    <value>48</value>
    <description>
      Maximum number of threads used for scanning HBase tables
    </description>
  </property>

  <property>
    <name>messaging.http.server.executor.threads</name>
    <value>0</value>
    <description>
      Number of executor threads for the HTTP server in the messaging system.
      If set to 0, no executor threads will be used and requests will be handled directly in the IO thread.
    </description>
  </property>

  <property>
    <name>messaging.http.server.consume.chunk.size</name>
    <value>60000</value>
    <description>
      Approximate size in bytes of each chunk streamed back to a consumer
    </description>
  </property>

  <property>
    <name>messaging.http.server.max.request.size.mb</name>
    <value>10</value>
    <description>
      Maximum request content size in megabytes for each request to the HTTP server in the messaging system
    </description>
  </property>

  <property>
    <name>messaging.http.server.worker.threads</name>
    <value>30</value>
    <description>
      Number of IO threads used by the HTTP server in the messaging system
    </description>
  </property>

  <property>
    <name>messaging.local.data.dir</name>
    <value>${local.data.dir}/messaging</value>
    <description>
      Local storage directory for the messaging system (used only in Standalone CDAP)
    </description>
  </property>

  <property>
    <name>messaging.message.table.hbase.splits</name>
    <value>16</value>
    <description>
      Number of splits to use for the message table in HBase upon table creation
    </description>
  </property>

  <property>
    <name>messaging.message.table.name</name>
    <value>tms.message</value>
    <description>
      Name of the message table of the messaging system
    </description>
  </property>

  <property>
    <name>messaging.metadata.table.name</name>
    <value>tms.meta</value>
    <description>
      Name of the metadata table of the messaging system
    </description>
  </property>

  <property>
    <name>messaging.payload.table.hbase.splits</name>
    <value>16</value>
    <description>
      Number of splits to use for the payload table in HBase upon table creation
    </description>
  </property>

  <property>
    <name>messaging.payload.table.name</name>
    <value>tms.payload</value>
    <description>
      Name of the payload table of the messaging system
    </description>
  </property>

  <property>
    <name>messaging.table.expiration.seconds</name>
    <value>300</value>
    <description>
      Number of seconds after which the messaging table cache will expire
    </description>
  </property>

  <property>
    <name>messaging.topic.default.ttl.seconds</name>
    <value>604800</value>
    <description>
      The default time-to-live in seconds for messages in a topic
    </description>
  </property>

  <property>
    <name>messaging.coprocessor.dir</name>
    <value>${hdfs.namespace}/tms</value>
    <description>Directory to store Messaging Service Table coprocessors</description>
  </property>

  <!-- Metadata Configuration -->

  <property>
    <name>metadata.max.allowed.chars</name>
    <value>50</value>
    <description>
      Maximum number of characters for metadata keys, values, and tags
    </description>
  </property>

  <property>
    <name>metadata.service.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Metadata HTTP service bind address
    </description>
  </property>

  <property>
    <name>metadata.service.bind.port</name>
    <value>0</value>
    <description>
      Metadata HTTP service bind port
    </description>
  </property>

  <property>
    <name>metadata.service.exec.threads</name>
    <value>${http.service.exec.threads}</value>
    <description>
      Number of Netty service executor threads for metadata HTTP service
    </description>
  </property>

  <property>
    <name>metadata.service.worker.threads</name>
    <value>${http.service.worker.threads}</value>
    <description>
      Number of Netty service IO worker threads for metadata HTTP service
    </description>
  </property>


  <!-- Metrics Configuration -->

  <property>
    <name>metrics.boss.threads</name>
    <value>${http.service.boss.threads}</value>
    <description>
      Number of Netty service boss threads for metrics HTTP services
    </description>
  </property>

  <property>
    <name>metrics.connection.backlog</name>
    <value>${http.service.connection.backlog}</value>
    <description>
      Max connection backlog of metrics HTTP service
    </description>
  </property>

  <property>
    <name>metrics.data.table.retention.resolution.1.seconds</name>
    <value>7200</value>
    <description>
      Retention resolution in seconds of the 1-second resolution table;
      default retention period is 2 hours
    </description>
  </property>

  <property>
    <name>metrics.data.table.retention.resolution.3600.seconds</name>
    <value>2592000</value>
    <description>
      Retention resolution in seconds of the 1-hour resolution table; default
      retention period is 30 days
    </description>
  </property>

  <property>
    <name>metrics.data.table.retention.resolution.60.seconds</name>
    <value>2592000</value>
    <description>
      Retention resolution in seconds for the 1-minute resolution table;
      default retention period is 30 days
    </description>
  </property>

  <property>
    <name>metrics.data.table.ts.rollTime.3600</name>
    <value>24</value>
    <description>
      Number of columns in a 1-hour resolution timeseries table
    </description>
  </property>

  <property>
    <name>metrics.data.table.ts.rollTime.60</name>
    <value>60</value>
    <description>
      Number of columns in a 1-minute resolution timeseries table
    </description>
  </property>

  <property>
    <name>metrics.dataset.hbase.stats.report.interval</name>
    <value>60</value>
    <description>
      Report interval in seconds for HBase stats
    </description>
  </property>

  <property>
    <name>metrics.dataset.leveldb.stats.report.interval</name>
    <value>60</value>
    <description>
      Report interval in seconds for LevelDB stats
    </description>
  </property>

  <property>
    <name>metrics.exec.threads</name>
    <value>${http.service.exec.threads}</value>
    <description>
      Number of Netty service executor threads for metrics HTTP services
    </description>
  </property>

  <property>
    <name>metrics.kafka.partition.size</name>
    <value>10</value>
    <description>
      Number of partitions for metrics topic
    </description>
  </property>

  <property>
    <name>metrics.max.instances</name>
    <value>${master.service.max.instances}</value>
    <description>
      Maximum number of instances for the metrics service
    </description>
  </property>

  <property>
    <name>metrics.memory.mb</name>
    <value>${master.service.memory.mb}</value>
    <description>
      Memory in megabytes for each metrics service instance
    </description>
  </property>

  <property>
    <name>metrics.num.cores</name>
    <value>${master.service.num.cores}</value>
    <description>
      Number of virtual cores for the metrics service
    </description>
  </property>

  <property>
    <name>metrics.num.instances</name>
    <value>1</value>
    <description>
      Number of instances for the metrics service
    </description>
  </property>

  <property>
    <name>metrics.processor.max.instances</name>
    <value>${master.service.max.instances}</value>
    <description>
      Maximum number of instances for metrics processor service Apache Twill
      runnable
    </description>
  </property>

  <property>
    <name>metrics.processor.memory.mb</name>
    <value>${master.service.memory.mb}</value>
    <description>
      Memory in megabytes for each metrics processor service Apache Twill
      runnable instance
    </description>
  </property>

  <property>
    <name>metrics.processor.num.cores</name>
    <value>1</value>
    <description>
      Number of virtual cores for metrics processor service Apache Twill runnable
    </description>
  </property>

  <property>
    <name>metrics.processor.num.instances</name>
    <value>1</value>
    <description>
      Number of instances for metrics processor service Apache Twill
      runnable
    </description>
  </property>

  <property>
    <name>metrics.processor.status.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Metrics Processor HTTP service bind address
    </description>
  </property>

  <property>
    <name>metrics.query.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Metrics Query service bind address
    </description>
  </property>

  <property>
    <name>metrics.query.bind.port</name>
    <value>45005</value>
    <description>
      Metrics Query service bind port
    </description>
  </property>

  <property>
    <name>metrics.worker.threads</name>
    <value>${http.service.worker.threads}</value>
    <description>
      Number of Netty service worker threads for metrics HTTP services
    </description>
  </property>


  <!-- Monitor Handler Configuration -->

  <property>
    <name>monitor.handler.service.discovery.timeout.seconds</name>
    <value>1</value>
    <description>
      Timeout in seconds for service discovery used in monitor handler
      service status check
    </description>
  </property>


  <!-- Notification System Configuration -->

  <property>
    <name>notification.kafka.topic</name>
    <value>notifications</value>
    <description>
      Kafka topic name used to publish notifications
    </description>
  </property>

  <property>
    <name>notification.transport.system</name>
    <value>kafka</value>
    <description>
      Transport system used by the notification system; can be either
      'kafka' or 'stream'
    </description>
  </property>

  
  <!-- Operational Statistics Configuration -->
  
  <property>
    <name>operational.stats.extensions.dir</name>
    <value>/opt/cdap/master/ext/operations</value>
    <description>
      Semicolon-separated list of local directories on the CDAP Master
      that are scanned for operational statistics extensions
    </description>
  </property>

  <property>
    <name>operational.stats.refresh.interval.secs</name>
    <value>60</value>
    <description>
      Number of seconds after which operational statistics should be refreshed
    </description>
  </property>


  <!-- Queue Configuration -->

  <property>
    <name>data.queue.config.update.interval</name>
    <value>5</value>
    <description>
      Frequency in seconds of updates to the queue consumer configuration
      used in evicting queue entries on flush and compaction
    </description>
  </property>

  <property>
    <name>data.queue.dequeue.tx.percent</name>
    <value>30</value>
    <description>
      Percentage of transaction time allowed to spend in dequeue; it should
      be an integer between 1-100
    </description>
  </property>

  <property>
    <name>data.queue.table.presplits</name>
    <value>16</value>
    <description>
      Number of splits in the queue table
    </description>
  </property>


  <!-- Remote System Operation Configuration -->

  <property>
    <name>remote.system.op.exec.threads</name>
    <value>${http.service.exec.threads}</value>
    <description>
      Number of Netty service executor threads for the remote system operation HTTP service
    </description>
  </property>

  <property>
    <name>remote.system.op.service.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Remote system operation HTTP service bind address
    </description>
  </property>

  <property>
    <name>remote.system.op.worker.threads</name>
    <value>${http.service.worker.threads}</value>
    <description>
      Number of Netty service IO worker threads for the remote system operation HTTP service
    </description>
  </property>


  <!-- Router Configuration -->

  <property>
    <name>router.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      CDAP Router service bind address
    </description>
  </property>

  <property>
    <name>router.bind.port</name>
    <value>11015</value>
    <description>
      CDAP Router service bind port
    </description>
  </property>

  <property>
    <name>router.client.boss.threads</name>
    <value>1</value>
    <description>
      The number of boss threads in the CDAP Router service client
    </description>
  </property>

  <property>
    <name>router.client.worker.threads</name>
    <value>10</value>
    <description>
      The number of worker threads in the CDAP Router service client
    </description>
  </property>

  <property>
    <name>router.connection.backlog</name>
    <value>20000</value>
    <description>
      The connection backlog in the CDAP Router service
    </description>
  </property>

  <property>
    <name>router.connection.idle.timeout.secs</name>
    <value>15</value>
    <description>
      Time in seconds after an HTTP request completes that idle router
      connections are closed
    </description>
  </property>

  <property>
    <name>router.server.address</name>
    <value>127.0.0.1</value>
    <description>
      CDAP Router service address to which CDAP UI connects
    </description>
  </property>

  <property>
    <name>router.server.boss.threads</name>
    <value>1</value>
    <description>
      The number of boss threads in the CDAP Router service
    </description>
  </property>

  <property>
    <name>router.server.port</name>
    <value>${router.bind.port}</value>
    <description>
      CDAP Router service port to which CDAP UI connects
    </description>
  </property>

  <property>
    <name>router.server.worker.threads</name>
    <value>10</value>
    <description>
      The number of worker threads in the CDAP Router service
    </description>
  </property>

  <property>
    <name>router.ssl.bind.port</name>
    <value>10443</value>
    <description>
      CDAP Router service bind port for HTTPS
    </description>
  </property>

  <property>
    <name>router.ssl.server.port</name>
    <value>${router.ssl.bind.port}</value>
    <description>
    </description>
  </property>

  <property>
    <name>router.ssl.webapp.bind.port</name>
    <value>20443</value>
    <description>
      CDAP Router service bind port for webapp for HTTPS (deprecated)
    </description>
  </property>

  <property>
    <name>router.userservice.fallback.strategy</name>
    <value>random</value>
    <description>
      If a RouteConfig is not found for a particular user service, this property is used
      to set the fallback routing strategy. Allowed options: "random", "smallest",
      "largest", or "drop". A string comparison of the versions of the user service is
      used for "smallest" or "largest". The "drop" option will not route the request to
      any service and will return "service not found".
    </description>
  </property>

  <property>
    <name>router.webapp.bind.port</name>
    <value>20000</value>
    <description>
      CDAP Router service bind port for webapp (deprecated)
    </description>
  </property>

  <property>
    <name>router.webapp.enabled</name>
    <value>false</value>
    <description>
      Determines if the webapp listening service should be started
      (deprecated)
    </description>
  </property>


  <!-- Security Configuration -->

  <property>
    <name>cdap.master.kerberos.keytab</name>
    <value></value>
    <description>
      The full path to the Kerberos keytab file containing the CDAP Master
      service's credentials
    </description>
  </property>

  <property>
    <name>cdap.master.kerberos.principal</name>
    <value></value>
    <description>
      Example: "CDAP_PRINCIPAL/_HOST@EXAMPLE.COM". The Kerberos primary user
      that should be used to login to the CDAP Master service. Substitute
      the Kerberos primary (user) for CDAP_PRINCIPAL, and your domain for
      EXAMPLE.COM. The string "_HOST" will be substituted with the local
      hostname.
    </description>
  </property>

  <property>
    <name>cdap.ugi.cache.expiration.ms</name>
    <value>3600000</value>
    <description>
      UserGroupInformation cache entry expiration time in milliseconds. It is only used when impersonation is
      enabled.
    </description>
  </property>

  <property>
    <name>kerberos.auth.enabled</name>
    <value>${security.enabled}</value>
    <description>
      Determines if Kerberos authentication is enabled
    </description>
  </property>

  <property>
    <name>kerberos.auth.relogin.interval.seconds</name>
    <value>300</value>
    <description>
      Re-login interval in seconds for Kerberos keytab
    </description>
  </property>

  <property>
    <name>security.auth.server.announce.address</name>
    <value></value>
    <description>
      CDAP Authentication service announce address, in the format of host:port. This is
      the address that clients should use to communicate with the Authentication Server.
      Leave empty to use the default value generated by the Authentication Server.
    </description>
  </property>

  <property>
    <name>security.auth.server.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      CDAP Authentication service bind address
    </description>
  </property>

  <property>
    <name>security.auth.server.bind.port</name>
    <value>10009</value>
    <description>
      CDAP Authentication service bind port
    </description>
  </property>

  <property>
    <name>security.auth.server.ssl.bind.port</name>
    <value>10010</value>
    <description>
      CDAP Authentication service bind port for HTTPS
    </description>
  </property>

  <property>
    <name>security.authentication.basic.realmfile</name>
    <value></value>
    <description>
      Username and password file to use when basic authentication is
      configured
    </description>
  </property>

  <property>
    <name>security.authentication.handlerClassName</name>
    <value></value>
    <description>
      Name of the authentication implementation to use to validate user
      credentials
    </description>
  </property>

  <property>
    <name>security.authentication.loginmodule.className</name>
    <value></value>
    <description>
      JAAS LoginModule implementation to use when
      co.cask.security.server.JAASAuthenticationHandler is configured for
      ${security.authentication.handlerClassName}
    </description>
  </property>

  <property>
    <name>security.authorization.admin.users</name>
    <value></value>
    <description>
      A comma-separated list of users for whom admin privileges are to be granted on the
      CDAP instance during CDAP startup, so that these users can create namespaces. These
      users are also granted admin privileges on the default namespace, so that they can
      manage privileges on the default namespace. This provides a method to bootstrap CDAP on
      an authorization-enabled cluster. The default is empty, in which case no users have
      access to creating namespaces or to managing privileges on the default namespace.
      In that scenario, authorization in CDAP has to be bootstrapped externally using interfaces
      provided by the configured authorization extension.
    </description>
  </property>

  <property>
    <name>security.authorization.cache.enabled</name>
    <value>true</value>
    <description>
      Determines if authorization policies can be cached by programs;
      defaults to true
    </description>
  </property>

  <property>
    <name>security.authorization.cache.refresh.interval.secs</name>
    <value>50</value>
    <description>
      The interval in seconds after which a background thread will refresh cached
      authorization policies. It is recommended to keep this value slightly lower than
      ${security.authorization.cache.ttl.secs}, so that the cached authorization policies
      do not expire unless they have been explicitly revoked. This setting only takes
      effect if ${security.authorization.cache.enabled} is set to true.
    </description>
  </property>

  <property>
    <name>security.authorization.cache.ttl.secs</name>
    <value>60</value>
    <description>
      The time-to-live in seconds for entries in the authorization cache used by programs.
      This setting only takes effect if ${security.authorization.cache.enabled} is set to
      true.
    </description>
  </property>

  <property>
    <name>security.authorization.enabled</name>
    <value>false</value>
    <description>
      When set to true, all operations in CDAP are authorized using the
      authorizer implementation found at the property
      ${security.authorization.extension.jar.path}
    </description>
  </property>

  <property>
    <name>security.authorization.extension.jar.path</name>
    <value></value>
    <description>
      If an external authorization system is used for authorizing operations
      on CDAP entities, this property sets the path to the bundled JAR file
      containing the extension code. This jar is only used when
      authorization is enabled by setting ${security.authorization.enabled}
      to true.
    </description>
  </property>

  <property>
    <name>security.data.keyfile.path</name>
    <value>${local.data.dir}/security/keyfile</value>
    <description>
      Path to the secret key file (only used in Standalone CDAP)
    </description>
  </property>

  <property>
    <name>security.enabled</name>
    <value>false</value>
    <description>
      Determines if authentication is enabled for CDAP; if true, all
      requests to CDAP must provide a valid access token
    </description>
  </property>

  <property>
    <name>security.realm</name>
    <value>cdap</value>
    <description>
      Authentication realm used for scoping security; this value should be
      unique for each installation of CDAP
    </description>
  </property>

  <property>
    <name>security.server.extended.token.expiration.ms</name>
    <value>604800000</value>
    <description>
      Admin tool access token expiration time in milliseconds; defaults to 1
      week (internal)
    </description>
  </property>

  <property>
    <name>security.server.maxthreads</name>
    <value>100</value>
    <description>
      Maximum number of threads that the CDAP Authentication service should
      use for handling HTTP requests
    </description>
  </property>

  <property>
    <name>security.server.token.expiration.ms</name>
    <value>86400000</value>
    <description>
      Access token expiration time in milliseconds; defaults to 24 hours
    </description>
  </property>

  <property>
    <name>security.store.file.name</name>
    <value>securestore</value>
    <description>
      Name of the secure store file
    </description>
  </property>

  <property>
    <name>security.store.file.path</name>
    <value>${local.data.dir}/store</value>
    <description>
      Location of the encrypted file which holds the secure store entries
    </description>
  </property>

  <property>
    <name>security.store.provider</name>
    <value>none</value>
    <description>
      Backend provider for the secure store; use 'none' if no secure store
    </description>
  </property>

  <property>
    <name>security.token.digest.algorithm</name>
    <value>HmacSHA256</value>
    <description>
      Algorithm used for generating MAC of access tokens
    </description>
  </property>

  <property>
    <name>security.token.digest.key.expiration.ms</name>
    <value>3600000</value>
    <description>
      Duration in milliseconds after which an active secret key used for signing tokens should
      be retired
    </description>
  </property>

  <property>
    <name>security.token.digest.keylength</name>
    <value>128</value>
    <description>
      Key length used in generating the secret keys for generating MAC of
      access tokens
    </description>
  </property>

  <property>
    <name>security.token.distributed.parent.znode</name>
    <value>/${root.namespace}/security/auth</value>
    <description>
      Parent node in ZooKeeper used for secret key distribution in
      distributed mode
    </description>
  </property>

  <property>
    <name>ssl.external.enabled</name>
    <value>false</value>
    <description>
      Enable SSL for external services
    </description>
  </property>

  <property>
    <name>ssl.internal.enabled</name>
    <value>false</value>
    <description>
      Enable SSL between Router and App Fabric
    </description>
  </property>

  <!-- Stream Configuration -->

  <property>
    <name>stream.async.queue.size</name>
    <value>100</value>
    <description>
      Queue size per async worker thread for queuing up async write requests
    </description>
  </property>

  <property>
    <name>stream.async.worker.threads</name>
    <value>${stream.worker.threads}</value>
    <description>
      Number of async worker threads for handling async write requests
    </description>
  </property>

  <property>
    <name>stream.base.dir</name>
    <value>/streams</value>
    <description>
      The directory root for all stream files, relative to the HDFS
      namespace
    </description>
  </property>

  <property>
    <name>stream.batch.buffer.threshold</name>
    <value>1048576</value>
    <description>
      Bytes retained in-memory before writing to a new stream file
    </description>
  </property>

  <property>
    <name>stream.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      Stream HTTP service bind address
    </description>
  </property>

  <property>
    <name>stream.bind.port</name>
    <value>0</value>
    <description>
      Stream HTTP service bind port
    </description>
  </property>

  <property>
    <name>stream.consumer.table.presplits</name>
    <value>16</value>
    <description>
      Number of splits for the stream consumer table
    </description>
  </property>

  <property>
    <name>stream.container.instance.id</name>
    <value>0</value>
    <description>
      Instance ID for the stream service container; the actual value will be
      set at runtime by the system automatically
    </description>
  </property>

  <property>
    <name>stream.container.instances</name>
    <value>1</value>
    <description>
      Number of YARN container instances for the stream handler; in
      Standalone CDAP, it is always one
    </description>
  </property>

  <property>
    <name>stream.container.memory.mb</name>
    <value>${master.service.memory.mb}</value>
    <description>
      Memory in megabytes for each YARN container that runs the
      stream handler
    </description>
  </property>

  <property>
    <name>stream.container.num.cores</name>
    <value>2</value>
    <description>
      Number of virtual cores for the YARN container that runs the stream
      handler
    </description>
  </property>

  <property>
    <name>stream.event.ttl</name>
    <value>9223372036854775807</value>
    <description>
      Default time-to-live in milliseconds (Long.MAX_VALUE) for stream
      events
    </description>
  </property>

  <property>
    <name>stream.file.cleanup.period</name>
    <value>300000</value>
    <description>
      Interval in milliseconds for running the stream file cleanup process
    </description>
  </property>

  <property>
    <name>stream.file.prefix</name>
    <value>file</value>
    <description>
      Prefix of file name for stream file
    </description>
  </property>

  <property>
    <name>stream.index.interval</name>
    <value>10000</value>
    <description>
      Interval in milliseconds for emitting new index entry in
      stream file
    </description>
  </property>

  <property>
    <name>stream.instance.file.prefix</name>
    <value>${stream.file.prefix}.${stream.container.instance.id}</value>
    <description>
      Prefix of file name for stream file per writer instance
    </description>
    <final>true</final>
  </property>

  <property>
    <name>stream.notification.threshold</name>
    <value>1024</value>
    <description>
      Size of data in megabytes to be ingested by a stream before a
      notification is published
    </description>
  </property>

  <property>
    <name>stream.partition.duration</name>
    <value>3600000</value>
    <description>
      Duration in milliseconds of a stream partition
    </description>
  </property>

  <property>
    <name>stream.size.schedule.polling.delay</name>
    <value>600</value>
    <description>
      Delay in seconds to poll a stream in a StreamSizeSchedule if no
      notification is received
    </description>
  </property>

  <property>
    <name>stream.worker.threads</name>
    <value>${http.service.worker.threads}</value>
    <description>
      Default number of IO worker threads for the stream HTTP service
    </description>
  </property>


  <!-- UI Configuration -->

  <property>
    <name>dashboard.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      CDAP UI bind address
    </description>
  </property>

  <property>
    <name>dashboard.bind.port</name>
    <value>11011</value>
    <description>
      CDAP UI bind port
    </description>
  </property>

  <property>
    <name>dashboard.router.check.timeout.secs</name>
    <value>0</value>
    <description>
      Interval in seconds that the CDAP UI waits before exiting when unable to connect to
      the CDAP Router service on startup; use a timeout of 0 to wait indefinitely
    </description>
  </property>

  <property>
    <name>dashboard.ssl.bind.port</name>
    <value>9443</value>
    <description>
      CDAP UI bind port for HTTPS
    </description>
  </property>

  <property>
    <name>dashboard.ssl.disable.cert.check</name>
    <value>false</value>
    <description>
      True to disable SSL certificate check from the CDAP UI
    </description>
  </property>

  <property>
    <name>http.client.connection.timeout.ms</name>
    <value>60000</value>
    <description>
      Connection timeout in milliseconds for internal HTTP requests
    </description>
  </property>

  <property>
    <name>http.client.read.timeout.ms</name>
    <value>60000</value>
    <description>
      Read timeout in milliseconds for internal HTTP requests
    </description>
  </property>

</configuration>
